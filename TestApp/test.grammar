token "fun";
token "def";
token "world";

type Expr -> 
    | Literal(Value : object)
    | Binary(Left : Expr, Operator : string, Right : Expr)
     Unary(Inner : Expr, Operator : string)
    | Group(Inner : Expr);

grammar Main  Expr {
    start -> main;
    main -> "hello" | "world"+ | "some"*;
};